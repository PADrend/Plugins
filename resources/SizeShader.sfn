#version 120

/*
 * This file is part of the open source part of the
 * Platform for Algorithm Development and Rendering (PADrend).
 * Web page: http://www.padrend.de/
 * Copyright (C) 2012 Ralf Petring <ralf@petring.net>
 * 
 * PADrend consists of an open source part and a proprietary part.
 * The open source part of PADrend is subject to the terms of the Mozilla
 * Public License, v. 2.0. You should have received a copy of the MPL along
 * with this library; see the file LICENSE. If not, you can obtain one at
 * http://mozilla.org/MPL/2.0/.
 */

#ifdef SG_VERTEX_SHADER

void main(void){
	gl_Position = ftransform();
	gl_TexCoord[0] = gl_MultiTexCoord0;
}

#endif

#ifdef SG_FRAGMENT_SHADER

uniform int[4] sg_viewport;
uniform sampler2D TUnit_1;
void main(){
	float x = gl_TexCoord[0].s;
	float y = gl_TexCoord[0].t;
	float scaleX=1.0/ float(sg_viewport[2]);
	float scaleY=1.0/ float(sg_viewport[3]);
	
	for(float f=0.0;f<40.0;f+=1.0){
		float fx=scaleX*f;
		float fy=scaleY*f;
		float a =
		texture2D(TUnit_1,vec2(x-fx*0.7,y-fy*0.7)).a *
		texture2D(TUnit_1,vec2(x-fx,y)).a *
		texture2D(TUnit_1,vec2(x-fx*0.7,y+fy*0.7)).a *
		texture2D(TUnit_1,vec2(x+fx*0.7,y-fy*0.7)).a *
		texture2D(TUnit_1,vec2(x+fx,y)).a *
		texture2D(TUnit_1,vec2(x+fx*0.7,y+fy*0.7)).a *
		texture2D(TUnit_1,vec2(x,y-fy)).a *
		texture2D(TUnit_1,vec2(x,y+fy)).a;
		if(a<=0.1){
			gl_FragColor = vec4(1.0,1.0,1.0,1.0) /40.0 * f;
			return;
		}
		
	}
	
	gl_FragColor = vec4(1.0,1.0,1.0,1.0);
}

#endif