#version 120

/*
 * This file is part of the open source part of the
 * Platform for Algorithm Development and Rendering (PADrend).
 * Web page: http://www.padrend.de/
 * Copyright (C) 2013 Claudius JÃ¤hn <claudius@uni-paderborn.de>
 * 
 * PADrend consists of an open source part and a proprietary part.
 * The open source part of PADrend is subject to the terms of the Mozilla
 * Public License, v. 2.0. You should have received a copy of the MPL along
 * with this library; see the file LICENSE. If not, you can obtain one at
 * http://mozilla.org/MPL/2.0/.
 */

// ------------------
// vs
#ifdef SG_VERTEX_SHADER

struct VertexProperties {
	vec3 position_es, normal_es;
	float pointSize;
};

//! \see main.sfn
void provideFragmentEffectVars(in VertexProperties vert){}

#endif
// ------------------
// fs
#ifdef SG_FRAGMENT_SHADER

struct CompositeColor {
	vec4 ambient, diffuse, specular;
};

struct SurfaceProperties {
	vec3 position_es, normal_es, tangent_es;
	vec4 ambient, diffuse, specular, emission;
	float shininess;
};

//! \see main.sfn
void addFragmentEffect(in SurfaceProperties surface, inout CompositeColor color) {
	float alphaOverride = pow(1.0 - abs(dot(normalize(surface.normal_es), normalize(surface.position_es))), 4.0) / 4.0;
	color.ambient.a = alphaOverride;
	color.diffuse.a = alphaOverride;
	color.specular.a = alphaOverride;
}

#endif
// ------------------
