#version 120

/*
 * This file is part of the open source part of the
 * Platform for Algorithm Development and Rendering (PADrend).
 * Web page: http://www.padrend.de/
 * Copyright (C) 2014 Claudius JÃ¤hn <claudius@uni-paderborn.de>
 * 
 * PADrend consists of an open source part and a proprietary part.
 * The open source part of PADrend is subject to the terms of the Mozilla
 * Public License, v. 2.0. You should have received a copy of the MPL along
 * with this library; see the file LICENSE. If not, you can obtain one at
 * http://mozilla.org/MPL/2.0/.
 */

// ------------------
// vs
#ifdef SG_VERTEX_SHADER

vec4 sg_getVertexColor();						//!	\see sgHelper.sfn

struct VertexProperties {
	vec3 position_cs, normal_cs;
	float pointSize;
};
varying float varPointSize;

//! \see main.sfn
void provideFragmentEffectVars(in VertexProperties vert){

//	varPointSize = vert.pointSize;
	varPointSize = sg_getVertexColor().a;

}

#endif
// ------------------
// fs
#ifdef SG_FRAGMENT_SHADER

varying float varPointSize;

struct CompositeColor {
	vec4 ambient, diffuse, specular;
};

struct SurfaceProperties {
	vec3 position_cs, normal_cs, tangent_cs;
	vec4 ambient, diffuse, specular, emission;
	float shininess;
};

//! \see main.sfn
void addFragmentEffect(in SurfaceProperties surface, inout CompositeColor color) {
//	float alphaOverride = pow(1.0 - abs(dot(normalize(surface.normal_cs), normalize(surface.position_cs))), 4.0) / 4.0;
	vec4 c;
	if(varPointSize<0){
		c = vec4(0.2,0,0,1);
	}else if(varPointSize<0.9){
//		c = vec4(0,1,0,1);
		c = mix(vec4(0.2, 0, 0,2),vec4(0, 0.6, 0.0, 1),varPointSize/0.9);
	}else if(varPointSize<1.01){
//		c = vec4(1,1,1,1);
		c = mix(vec4(0, 0.6, 0.0, 1),vec4(0, 0.0, 1.0, 1),(varPointSize-0.9)/0.1);
	}else{
		c = vec4(1,1,1,1);
//		c = vec4(0.1,0,0,1);
	}
	color.ambient = color.diffuse= c; //mix(vec4(1,0,0,1),vec4(0,1,0,1),varPointSize*2.0);
//	color.diffuse.a = alphaOverride;
//	color.specular.a = alphaOverride;
}

#endif
// ------------------
