#version 120

/*
 * This file is part of the open source part of the
 * Platform for Algorithm Development and Rendering (PADrend).
 * Web page: http://www.padrend.de/
 * Copyright (C) 2012 Claudius JÃ¤hn <claudius@uni-paderborn.de>
 * Copyright (C) 2012 Ralf Petring <ralf@petring.net>
 * 
 * PADrend consists of an open source part and a proprietary part.
 * The open source part of PADrend is subject to the terms of the Mozilla
 * Public License, v. 2.0. You should have received a copy of the MPL along
 * with this library; see the file LICENSE. If not, you can obtain one at
 * http://mozilla.org/MPL/2.0/.
 */

uniform bool sg_textureEnabled[8];
varying vec2 var_texCoord0;
varying vec2 var_texCoord1;

// ------------------
// vs
#ifdef SG_VERTEX_SHADER

attribute vec2 sg_TexCoord0;
attribute vec2 sg_TexCoord1;

void provideTextureVars() {
	if(sg_textureEnabled[0])
		var_texCoord0 = sg_TexCoord0;
	if(sg_textureEnabled[1])
		var_texCoord1 = sg_TexCoord1;
}
#endif

// ------------------
// fs
#ifdef SG_FRAGMENT_SHADER

struct FragmentColor {
	vec4 ambient;
	vec4 diffuse;
	vec4 specular;
};

void multiplyFragmentColor(inout FragmentColor c, vec4 f);

uniform sampler2D sg_texture0;
uniform sampler2D sg_texture1;

void addTexture(inout FragmentColor color) {
	if(sg_textureEnabled[0]) 
		multiplyFragmentColor(color,texture2D(sg_texture0, var_texCoord0));
	if(sg_textureEnabled[1]) 
		multiplyFragmentColor(color,texture2D(sg_texture1, var_texCoord1));
}
#endif
// ------------------
